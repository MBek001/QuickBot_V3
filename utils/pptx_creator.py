"""
Utilities for generating PowerPoint presentations.

This module uses python‑pptx to assemble simple slide decks from a
title and a list of slide contents.  Each item in the list will
generate a new slide containing a bullet point list of lines.  If the
`python‑pptx` library is unavailable the function will return
``None`` so that the caller can handle the error gracefully.
"""

from pathlib import Path
from typing import List, Optional

try:
    from pptx import Presentation  # type: ignore
    from pptx.util import Inches
except ImportError:  # pragma: no cover
    Presentation = None  # type: ignore


def create_pptx(title: str, slides: List[str], output_dir: str = "/tmp") -> Optional[str]:
    """Create a PowerPoint file from a title and slide contents.

    Parameters
    ----------
    title : str
        The title of the presentation.
    slides : list of str
        A list where each element becomes a slide.  Each string may
        contain newline characters; each line becomes a bullet point.
    output_dir : str
        Directory into which the file will be saved.  Defaults to /tmp.

    Returns
    -------
    str or None
        The path to the generated file, or None if python‑pptx is
        unavailable.
    """
    if Presentation is None:
        return None
    prs = Presentation()
    # Title slide
    title_slide_layout = prs.slide_layouts[0]
    slide = prs.slides.add_slide(title_slide_layout)
    slide.shapes.title.text = title
    subtitle = slide.placeholders[1] if len(slide.placeholders) > 1 else None
    if subtitle is not None:
        subtitle.text = "Generated by AI Bot"
    # Content slides
    for content in slides:
        layout = prs.slide_layouts[1]
        s = prs.slides.add_slide(layout)
        title_shape = s.shapes.title
        body_shape = s.shapes.placeholders[1]
        lines = [line.strip() for line in content.split("\n") if line.strip()]
        title_shape.text = lines[0] if lines else ""
        tf = body_shape.text_frame
        # Clear existing paragraphs
        tf.clear()
        for idx, line in enumerate(lines[1:], start=0):
            p = tf.add_paragraph() if idx > 0 else tf.paragraphs[0]
            p.text = line
            p.level = 0
    # Save the file
    output_dir_path = Path(output_dir)
    output_dir_path.mkdir(parents=True, exist_ok=True)
    filename = output_dir_path / f"presentation_{title.replace(' ', '_')}.pptx"
    prs.save(str(filename))
    return str(filename)
